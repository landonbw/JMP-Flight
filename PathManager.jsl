crossed_plane_func = function({plane_point_crossed, normal_crosed, pos_crossed},	//crossed_ret = 0;	//point_diff_crossed = matrix({pos_crossed[1] - plane_point_crossed[1], pos_crossed[2] - plane_point_crossed[2], pos_crossed[3] - plane_point_crossed[3]});	point_diff_crossed = pos_crossed - plane_point_crossed;	dot_prod_crossed = point_diff_crossed[1] * normal_crossed[1] + point_diff_crossed[2] * normal_crossed[2] + point_diff_crossed[3] * normal_crossed[3];	if(dot_prod_crossed > 0,		crossed_ret = 1,		crossed_ret = 0	);	crossed_ret;);normalize_vector = function({matrix_to_normalize},	vector_length = sqrt(matrix_to_normalize[1]^2 + matrix_to_normalize[2]^2 + matrix_to_normalize[3]^2);	normalized_matrix = matrix_to_normalize / vector_length;);waypoint_counter = 2;get_path_straight_line_func = function({new_waypoints, pos_get_path},	num_waypoints = length(new_waypoints);		if(waypoint_counter-1<1,		prev_indx=num_waypoints,		prev_indx=waypoint_counter	);	waypoint_past = new_waypoints[prev_indx];		waypoint_current = new_waypoints[waypoint_counter];		if(waypoint_counter+1>num_waypoints,		next_indx=(waypoint_counter-num_waypoints)+1,		next_indx=waypoint_counter	);	waypoint_next = new_waypoints[next_indx];		r_get_path = waypoint_past;	//q_past_get_path = matrix({waypoint_now[1]-waypoint_past[1], waypoint_now[2]-waypoint_past[2], waypoint_now[3]-waypoint_past[3]});	//q_now_get_path = matrix({waypoint_next[1]-waypoint_now[1], waypoint_next[2]-waypoint_now[2], waypoint_next[3]-waypoint_now[3]});	q_past_get_path = waypoint_now - waypoint_past;	q_now_get_path = waypoint_next - waypoint_now;	//normalize the q vectors	q_past_get_path = normalize_vector(q_past_get_path);	q_now_get_path = normalize_vector(q_now_get_path);		n_now_get_path = q_past_get_path + q_now_get_path;	n_now_get_path = normalize_vector(n_now_get_path);		//check if the plane has been crossed for the next path	if(crossed_plane_func(waypoint_now, n_now_get_path, pos_get_path),		waypoint_counter += 1	);		get_path-straight_line_ret = list([1, 35, r_get_path, q_past_get_path, 1, 1, 1]);	);