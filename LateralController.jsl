course_integrator = 0.0;
course_e_d1 = 0.0;
chi_dot = 0.0;
chi_d1 = psi;
ts_control = 0.001;



///////////////////////////////////////////////////////////////////////////////////////////
//	Saturate a value
///////////////////////////////////////////////////////////////////////////////////////////
saturate_val = Function( {value, max_value},
	If( Abs( value ) > max_value,
		saturated_value = (value / Abs( value )) * max_value, 
		//else
		saturated_value = value
	);
	saturated_value;
);


///////////////////////////////////////////////////////////////////////////////////////////
//	Lateral Control
///////////////////////////////////////////////////////////////////////////////////////////
lateralControl = Function( {state, commanded_course, flight_state, phi_ff = 0.0},
	vg_fs = flight_state[1];
	beta_fs = flight_state[3];
	heading_fs = flight_state[5];
	
	phi_c = course_control_loop( heading_fs, commanded_course, phi_ff );

	delta_a = roll_control_loop( state, phi_c );
	ret = delta_a;
);


///////////////////////////////////////////////////////////////////////////////////////////
//	Roll Control Loop
///////////////////////////////////////////////////////////////////////////////////////////
roll_control_loop = Function( {state, phi_c},
	delta_a_max = 1;
	phi = state[7];
	p = state[10];
	phi_error = phi_c - phi;
	delta_a_prime = phi_error * kp_roll;
	delta_a_unsaturated = delta_a_prime - kd_roll * p;
	delta_a = saturate_val( delta_a_unsaturated, delta_a_max );
	Return( delta_a );
	delta_a;
);


///////////////////////////////////////////////////////////////////////////////////////////
//	Course Control Loop
///////////////////////////////////////////////////////////////////////////////////////////
course_control_loop = Function( {chi, chi_c, phi_ff = 0},
	phi_c_max = 1;
	a = (2.0 * sigma - ts_control) / (2.0 * sigma + ts_control);
	a2 = 2.0 / (2.0 * sigma + ts_control);
	error1 = chi_c - chi;
	error2 = unit_circle_compliment( error1 );
	//show(error1);
	//show(error2);
	If( Abs( error1 ) <= Abs( error2 ),
		error_chi = error1,
		error_chi = error2
	);
	//show("through if");

	course_integrator += (ts_simulation / 2.0) * (error_chi + course_e_d1);
	chi_dot = a * chi_dot + a2 + (chi_d1 - chi);
	
	phi_c_unsat = kp_chi * error_chi + kd_chi * chi_dot + ki_chi * course_integrator + phi_ff;

	course_e_d1 = error_chi;
	chi_d1 = chi;

	phi_c = saturate_val( phi_c_unsat, phi_c_max );
	//show(course_integrator);
	course_integrator = course_integrator + (ts_control / ki_chi) * (phi_c - phi_c_unsat);

	phi_c;
);


///////////////////////////////////////////////////////////////////////////////////////////
//	Sideslip Control Loop
///////////////////////////////////////////////////////////////////////////////////////////
sideslip_integrator = 0.0;
sideslip_error_d1 = 0.0;
sideslip_kp = 1;
sideslip_ki = 1;
delta_r_max = 0.5;

sideslip_control_loop = Function( {beta},
	beta_c = 0.0;
	
	error1 = beta_c - beta;
	error2 = unit_circle_compliment( error1 );
	If( error1 <= error2,
		error = error1,
		error = error2
	);
	sideslip_integrator += (ts_control / 2.0) * (error + sideslip_error_d1);
	
	delta_r_unsat = sideslip_kp * error - sideslip_ki * sideslip_integrator;
	sideslip_error_d1 = error;
	delta_r = saturate( delta_r_unsat, delta_r_max );
	
	sideslip_integrator = sideslip_integrator + (ts_control / sideslip_ki) * (delta_r - delta_r_unsat);
	Return( delta_r );
	delta_r;
);


///////////////////////////////////////////////////////////////////////////////////////////
//	Unit Circle Compliment
///////////////////////////////////////////////////////////////////////////////////////////

unit_circle_compliment = Function( {angle},
	ucc_sign = angle / Abs( angle );
	compliment_angle = ucc_sign * (Abs( angle ) - 2.0 * 3.14159265359);
	If( angle == 0,
		compliment_angle = 2 * 3.14159
	);
	Return( compliment_angle );
	compliment_angle;
);

///////////////////////////////////////////////////////////////////////////////////////////
//	testing things
///////////////////////////////////////////////////////////////////////////////////////////
//show(unit_circle_compliment(0));
;